user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'cache_status:$upstream_cache_status rt:$request_time';

    access_log /var/log/nginx/access.log main;

    # 基础性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip 压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Brotli 压缩（如果支持）
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 缓存配置
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   1y;
        application/javascript     1y;
        ~image/                    1y;
        ~font/                     1y;
        ~audio/                    1y;
        ~video/                    1y;
    }

    # 安全头配置
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    server {
        listen 80;
        listen [::]:80;
        server_name www.xinliuyuansu.com xinliuyuansu.com web.ti-ai-calculator.com;
        
        # 重定向到 HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name www.xinliuyuansu.com xinliuyuansu.com web.ti-ai-calculator.com;

        # SSL 配置
        ssl_certificate /etc/letsencrypt/live/www.xinliuyuansu.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/www.xinliuyuansu.com/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozTLS:10m;
        ssl_session_tickets off;

        # 现代 SSL 配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;

        root /var/www/html;
        index index.html;

        # 启用 expires
        expires $expires;

        # HTML 文件 - 禁用缓存
        location ~* \.html$ {
            expires epoch;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            try_files $uri $uri/ =404;
        }

        # Next.js 静态资源 - 长期缓存（包含哈希的文件）
        location /_next/static/ {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header Vary "Accept-Encoding";
            
            # 预压缩文件支持
            location ~* \.(js|css)$ {
                gzip_static on;
                # brotli_static on;
            }
        }

        # 字体文件 - 长期缓存
        location ~* \.(woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header Access-Control-Allow-Origin "*";
            add_header Cross-Origin-Resource-Policy "cross-origin";
        }

        # 图片文件 - 长期缓存
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|avif)$ {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header Vary "Accept";
            
            # 图片优化
            location ~* \.(jpg|jpeg|png|webp)$ {
                add_header Accept-CH "DPR, Viewport-Width, Width";
            }
        }

        # 音频和视频文件 - 长期缓存
        location ~* \.(mp3|mp4|avi|mov|wmv|flv|webm|ogg|wav)$ {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header Accept-Ranges "bytes";
            
            # 支持范围请求
            location ~* \.(mp4|webm)$ {
                mp4;
                mp4_buffer_size 1m;
                mp4_max_buffer_size 5m;
            }
        }

        # CSS 和 JS 文件 - 中期缓存（如果没有哈希）
        location ~* \.(css|js)$ {
            expires 1d;
            add_header Cache-Control "public, max-age=86400, stale-while-revalidate=31536000";
            add_header Vary "Accept-Encoding";
            gzip_static on;
        }

        # SVG 文件 - 中期缓存
        location ~* \.svg$ {
            expires 1d;
            add_header Cache-Control "public, max-age=86400, stale-while-revalidate=31536000";
            add_header Content-Type "image/svg+xml";
            add_header Vary "Accept-Encoding";
        }

        # 主页面处理
        location / {
            try_files $uri $uri/ $uri.html /index.html;
            
            # 对于 SPA 路由
            location ~* ^.+\.(css|js|jpg|jpeg|gif|png|ico|svg|woff|woff2|ttf|eot)$ {
                # 静态资源直接返回
            }
        }

        # API 路径（如果有）
        location /api/ {
            expires epoch;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 安全配置
        location ~ /\. {
            deny all;
        }

        location ~ ~$ {
            deny all;
        }

        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
